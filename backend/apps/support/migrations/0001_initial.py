# Generated by Django 5.0.1 on 2025-01-30 13:58

import django.contrib.postgres.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0002_auto_20250130_1330"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SupportTicket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("NE", "New"),
                            ("AS", "Assigned"),
                            ("IP", "In Progress"),
                            ("PE", "Pending"),
                            ("RE", "Resolved"),
                            ("CL", "Closed"),
                        ],
                        default="NE",
                        max_length=2,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LO", "Low"),
                            ("ME", "Medium"),
                            ("HI", "High"),
                            ("UR", "Urgent"),
                        ],
                        default="ME",
                        max_length=2,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("TE", "Technical"),
                            ("BI", "Billing"),
                            ("AC", "Account"),
                            ("FE", "Feature Request"),
                            ("BU", "Bug Report"),
                            ("OT", "Other"),
                        ],
                        default="OT",
                        max_length=2,
                    ),
                ),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("resolution", models.TextField(blank=True)),
                (
                    "satisfaction_rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)],
                        null=True,
                    ),
                ),
                ("feedback", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_support_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_support_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_support_tickets",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "support ticket",
                "verbose_name_plural": "support tickets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TicketMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "attachments",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "is_internal",
                    models.BooleanField(
                        default=False, help_text="Internal note visible only to staff"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "sender",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_ticket_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="support.supportticket",
                    ),
                ),
            ],
            options={
                "verbose_name": "ticket message",
                "verbose_name_plural": "ticket messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("GE", "General"),
                            ("TE", "Technical"),
                            ("BI", "Billing"),
                            ("AC", "Account"),
                            ("FE", "Features"),
                            ("SE", "Security"),
                        ],
                        default="GE",
                        max_length=2,
                    ),
                ),
                ("question", models.CharField(max_length=500)),
                ("answer", models.TextField()),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("is_published", models.BooleanField(default=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("helpful_count", models.PositiveIntegerField(default=0)),
                ("not_helpful_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_faqs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="faqs",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "FAQ",
                "verbose_name_plural": "FAQs",
                "ordering": ["-view_count", "question"],
                "indexes": [
                    models.Index(
                        fields=["organization", "category"],
                        name="support_faq_organiz_f50e0c_idx",
                    ),
                    models.Index(
                        fields=["is_published", "view_count"],
                        name="support_faq_is_publ_04a494_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="KnowledgeBase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=250, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("GU", "User Guide"),
                            ("TU", "Tutorial"),
                            ("TR", "Troubleshooting"),
                            ("BP", "Best Practices"),
                            ("RN", "Release Notes"),
                            ("AP", "API Documentation"),
                        ],
                        max_length=2,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=50),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("is_published", models.BooleanField(default=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("helpful_count", models.PositiveIntegerField(default=0)),
                ("not_helpful_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_articles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="knowledge_base",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "knowledge base article",
                "verbose_name_plural": "knowledge base articles",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["organization", "category"],
                        name="support_kno_organiz_2789c0_idx",
                    ),
                    models.Index(
                        fields=["is_published", "view_count"],
                        name="support_kno_is_publ_7a8104_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["status", "priority"], name="support_sup_status_c67c70_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supportticket",
            index=models.Index(
                fields=["organization", "created_at"],
                name="support_sup_organiz_1397e9_idx",
            ),
        ),
    ]
