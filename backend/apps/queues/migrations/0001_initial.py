# Generated by Django 5.0.1 on 2025-01-30 12:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("geolocation", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="VehicleCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "max_size",
                    models.JSONField(
                        default=dict,
                        help_text="Maximum vehicle dimensions (length, width, height) in meters",
                    ),
                ),
                ("requires_special_handling", models.BooleanField(default=False)),
                (
                    "service_time_multiplier",
                    models.FloatField(
                        default=1.0, help_text="Multiplier for base service time"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "vehicle category",
                "verbose_name_plural": "vehicle categories",
            },
        ),
        migrations.CreateModel(
            name="QueueType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "category",
                    models.CharField(
                        choices=[("VE", "Vehicle"), ("PE", "Person"), ("MI", "Mixed")],
                        default="PE",
                        max_length=2,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "estimated_service_time",
                    models.IntegerField(
                        default=15, help_text="Estimated service time in minutes"
                    ),
                ),
                (
                    "max_capacity",
                    models.IntegerField(
                        default=100, help_text="Maximum number of tickets allowed"
                    ),
                ),
                (
                    "priority_levels",
                    models.JSONField(
                        default=dict, help_text="Priority levels configuration"
                    ),
                ),
                ("requires_vehicle_info", models.BooleanField(default=False)),
                ("requires_identification", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="queue_types",
                        to="core.organizationbranch",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="queue_types",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "queue type",
                "verbose_name_plural": "queue types",
            },
        ),
        migrations.CreateModel(
            name="ServicePoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AV", "Available"),
                            ("BU", "Busy"),
                            ("OF", "Offline"),
                            ("BR", "Break"),
                        ],
                        default="AV",
                        max_length=2,
                    ),
                ),
                ("is_vehicle_compatible", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="service_points",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "branch",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_points",
                        to="core.organizationbranch",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="service_points",
                        to="geolocation.locationbasedservice",
                    ),
                ),
            ],
            options={
                "verbose_name": "service point",
                "verbose_name_plural": "service points",
            },
        ),
        migrations.CreateModel(
            name="Queue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AC", "Active"),
                            ("PA", "Paused"),
                            ("CL", "Closed"),
                            ("MA", "Maintenance"),
                        ],
                        default="AC",
                        max_length=2,
                    ),
                ),
                ("current_number", models.IntegerField(default=0)),
                (
                    "current_wait_time",
                    models.IntegerField(
                        default=0, help_text="Current wait time in minutes"
                    ),
                ),
                ("is_priority", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="queues",
                        to="geolocation.locationbasedservice",
                    ),
                ),
                (
                    "queue_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="queues",
                        to="queues.queuetype",
                    ),
                ),
                (
                    "service_points",
                    models.ManyToManyField(
                        related_name="assigned_queues", to="queues.servicepoint"
                    ),
                ),
            ],
            options={
                "verbose_name": "queue",
                "verbose_name_plural": "queues",
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("WA", "Waiting"),
                            ("CA", "Called"),
                            ("SE", "Serving"),
                            ("CO", "Completed"),
                            ("CN", "Cancelled"),
                            ("NS", "No Show"),
                            ("TR", "Transferred"),
                        ],
                        default="WA",
                        max_length=2,
                    ),
                ),
                ("priority_level", models.IntegerField(default=0)),
                (
                    "estimated_wait_time",
                    models.IntegerField(
                        default=0, help_text="Estimated wait time in minutes"
                    ),
                ),
                ("check_in_time", models.DateTimeField(auto_now_add=True)),
                ("called_time", models.DateTimeField(blank=True, null=True)),
                ("service_start_time", models.DateTimeField(blank=True, null=True)),
                ("service_end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "vehicle_info",
                    models.JSONField(
                        blank=True,
                        help_text="Vehicle information if applicable",
                        null=True,
                    ),
                ),
                (
                    "identification_info",
                    models.JSONField(
                        blank=True,
                        help_text="Identification information if required",
                        null=True,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tickets",
                        to="geolocation.userlocation",
                    ),
                ),
                (
                    "queue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="queues.queue",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "ticket",
                "verbose_name_plural": "tickets",
                "ordering": ["priority_level", "check_in_time"],
            },
        ),
        migrations.AddField(
            model_name="servicepoint",
            name="current_ticket",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="current_service_point",
                to="queues.ticket",
            ),
        ),
        migrations.CreateModel(
            name="QueueNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("TC", "Ticket Created"),
                            ("QU", "Queue Update"),
                            ("CA", "Called to Service"),
                            ("RE", "Reminder"),
                            ("SC", "Status Change"),
                            ("EM", "Emergency"),
                        ],
                        max_length=2,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "sent_via",
                    models.CharField(
                        choices=[
                            ("sms", "SMS"),
                            ("email", "Email"),
                            ("push", "Push Notification"),
                            ("whatsapp", "WhatsApp"),
                        ],
                        max_length=10,
                    ),
                ),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="queues.ticket",
                    ),
                ),
            ],
            options={
                "verbose_name": "queue notification",
                "verbose_name_plural": "queue notifications",
            },
        ),
        migrations.CreateModel(
            name="QueueAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("total_tickets", models.IntegerField(default=0)),
                ("served_tickets", models.IntegerField(default=0)),
                ("cancelled_tickets", models.IntegerField(default=0)),
                ("no_shows", models.IntegerField(default=0)),
                (
                    "average_wait_time",
                    models.IntegerField(
                        default=0, help_text="Average wait time in minutes"
                    ),
                ),
                (
                    "average_service_time",
                    models.IntegerField(
                        default=0, help_text="Average service time in minutes"
                    ),
                ),
                (
                    "peak_hours",
                    models.JSONField(default=dict, help_text="Peak hours data"),
                ),
                (
                    "satisfaction_score",
                    models.FloatField(
                        blank=True,
                        help_text="Average satisfaction score (0-5)",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "queue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="queues.queue",
                    ),
                ),
            ],
            options={
                "verbose_name": "queue analytics",
                "verbose_name_plural": "queue analytics",
                "unique_together": {("queue", "date")},
            },
        ),
    ]
