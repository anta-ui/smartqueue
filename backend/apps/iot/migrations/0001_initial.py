# Generated by Django 5.0.1 on 2025-02-18 23:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("ar", "0001_initial"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ARMarker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "marker_type",
                    models.CharField(
                        choices=[
                            ("QR", "QR Code"),
                            ("IM", "Image"),
                            ("OB", "3D Object"),
                        ],
                        max_length=2,
                    ),
                ),
                ("content", models.FileField(upload_to="ar/markers/")),
                ("position_x", models.FloatField()),
                ("position_y", models.FloatField()),
                ("position_z", models.FloatField()),
                ("rotation", models.FloatField(default=0)),
                ("scale", models.FloatField(default=1)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ar_markers",
                        to="ar.venue",
                    ),
                ),
            ],
            options={
                "verbose_name": "AR marker",
                "verbose_name_plural": "AR markers",
            },
        ),
        migrations.CreateModel(
            name="IoTDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("SE", "Sensor"),
                            ("DI", "Display"),
                            ("CO", "Counter"),
                            ("BE", "Beacon"),
                            ("OT", "Other"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("AC", "Active"),
                            ("IN", "Inactive"),
                            ("MA", "Maintenance"),
                            ("ER", "Error"),
                        ],
                        default="AC",
                        max_length=2,
                    ),
                ),
                ("mac_address", models.CharField(max_length=17, unique=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("firmware_version", models.CharField(max_length=50)),
                ("last_seen", models.DateTimeField(blank=True, null=True)),
                ("battery_level", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="iot_devices",
                        to="ar.venue",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="iot_devices",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "IoT device",
                "verbose_name_plural": "IoT devices",
            },
        ),
        migrations.CreateModel(
            name="NavigationPath",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("waypoints", models.JSONField(default=list)),
                ("distance", models.FloatField()),
                (
                    "estimated_time",
                    models.IntegerField(help_text="Estimated time in seconds"),
                ),
                ("is_accessible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "end_point",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paths_to",
                        to="iot.armarker",
                    ),
                ),
                (
                    "start_point",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paths_from",
                        to="iot.armarker",
                    ),
                ),
            ],
            options={
                "verbose_name": "navigation path",
                "verbose_name_plural": "navigation paths",
            },
        ),
        migrations.CreateModel(
            name="SmartDisplay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("screen_size", models.CharField(max_length=50)),
                ("resolution", models.CharField(max_length=50)),
                (
                    "orientation",
                    models.CharField(
                        choices=[("P", "Portrait"), ("L", "Landscape")], max_length=1
                    ),
                ),
                ("current_content", models.TextField(blank=True, null=True)),
                ("last_content_update", models.DateTimeField(blank=True, null=True)),
                (
                    "device",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="smart_display",
                        to="iot.iotdevice",
                    ),
                ),
            ],
            options={
                "verbose_name": "smart display",
                "verbose_name_plural": "smart displays",
            },
        ),
        migrations.CreateModel(
            name="EnvironmentalMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("EN", "Energy Consumption"),
                            ("CA", "Carbon Footprint"),
                            ("WA", "Water Usage"),
                            ("WS", "Waste"),
                        ],
                        max_length=2,
                    ),
                ),
                ("value", models.FloatField()),
                ("unit", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField()),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="environmental_metrics",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "environmental metric",
                "verbose_name_plural": "environmental metrics",
                "indexes": [
                    models.Index(
                        fields=["organization", "metric_type", "timestamp"],
                        name="iot_environ_organiz_36a17f_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="DeviceReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                ("value", models.JSONField()),
                ("is_anomaly", models.BooleanField(default=False)),
                (
                    "device",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="readings",
                        to="iot.iotdevice",
                    ),
                ),
            ],
            options={
                "verbose_name": "device reading",
                "verbose_name_plural": "device readings",
                "indexes": [
                    models.Index(
                        fields=["device", "timestamp"],
                        name="iot_devicer_device__104b73_idx",
                    )
                ],
            },
        ),
    ]
